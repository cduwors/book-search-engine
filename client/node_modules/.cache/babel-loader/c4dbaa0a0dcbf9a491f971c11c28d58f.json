{"ast":null,"code":"import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from \"@apollo/client\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport SavedBooks from \"./pages/SavedBooks\";\nimport Navbar from \"./components/Navbar\";\nconst httpLink = createHttpLink({\n  uri: \"/graphql\"\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : \"\"\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n}); // function App() {\n// \treturn (\n// \t\t<ApolloProvider client={client}>\n// \t\t\t<Router>\n// \t\t\t\t<>\n// \t\t\t\t\t<Navbar />\n// \t\t\t\t\t<Routes>\n// \t\t\t\t\t\t<Route exact path=\"/\" component={SearchBooks} />\n// \t\t\t\t\t\t<Route exact path=\"/saved\" component={SavedBooks} />\n// \t\t\t\t\t\t<Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n// \t\t\t\t\t</Routes>\n// \t\t\t\t</>\n// \t\t\t</Router>\n// \t\t</ApolloProvider>\n// \t);\n// }\n// export default App;","map":{"version":3,"sources":["/Users/Christina/Desktop/projects/book-search-engine/client/src/App.js"],"names":["React","BrowserRouter","Router","Routes","Route","setContext","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","SearchBooks","SavedBooks","Navbar","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,SACCC,cADD,EAECC,YAFD,EAGCC,aAHD,EAICC,cAJD,QAKO,gBALP;AAOA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC/BK,EAAAA,GAAG,EAAE;AAD0B,CAAD,CAA/B;AAIA,MAAMC,QAAQ,GAAGV,UAAU,CAAC,CAACW,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC/C,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd;AACA,SAAO;AACNH,IAAAA,OAAO,EAAE,EACR,GAAGA,OADK;AAERI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFnC;AADH,GAAP;AAMA,CAR0B,CAA3B;AAUA,MAAMI,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC/BgB,EAAAA,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CADyB;AAE/BY,EAAAA,KAAK,EAAE,IAAIjB,aAAJ;AAFwB,CAAjB,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport {\n\tApolloProvider,\n\tApolloClient,\n\tInMemoryCache,\n\tcreateHttpLink,\n} from \"@apollo/client\";\n\nimport SearchBooks from \"./pages/SearchBooks\";\nimport SavedBooks from \"./pages/SavedBooks\";\nimport Navbar from \"./components/Navbar\";\n\nconst httpLink = createHttpLink({\n\turi: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem(\"id_token\");\n\treturn {\n\t\theaders: {\n\t\t\t...headers,\n\t\t\tauthorization: token ? `Bearer ${token}` : \"\",\n\t\t},\n\t};\n});\n\nconst client = new ApolloClient({\n\tlink: authLink.concat(httpLink),\n\tcache: new InMemoryCache(),\n});\n\n// function App() {\n// \treturn (\n// \t\t<ApolloProvider client={client}>\n// \t\t\t<Router>\n// \t\t\t\t<>\n// \t\t\t\t\t<Navbar />\n// \t\t\t\t\t<Routes>\n// \t\t\t\t\t\t<Route exact path=\"/\" component={SearchBooks} />\n// \t\t\t\t\t\t<Route exact path=\"/saved\" component={SavedBooks} />\n// \t\t\t\t\t\t<Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n// \t\t\t\t\t</Routes>\n// \t\t\t\t</>\n// \t\t\t</Router>\n// \t\t</ApolloProvider>\n// \t);\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}