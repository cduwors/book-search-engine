{"ast":null,"code":"var _jsxFileName = \"/Users/Christina/Desktop/projects/book-search-engine/client/src/pages/SearchBooks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]); // create state for holding our search field data\n\n  const [searchInput, setSearchInput] = useState(\"\"); // create state to hold saved bookId values\n\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n  const [saveBook, {\n    error\n  }] = useMutation(SAVE_BOOK); // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  }); // create method to search for books and set state on form submit\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchInput}`);\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const {\n        items\n      } = await response.json();\n      const bookData = items.map(book => {\n        var _book$volumeInfo$imag;\n\n        return {\n          bookId: book.id,\n          authors: book.volumeInfo.authors || [\"No author to display\"],\n          title: book.volumeInfo.title,\n          description: book.volumeInfo.description,\n          image: ((_book$volumeInfo$imag = book.volumeInfo.imageLinks) === null || _book$volumeInfo$imag === void 0 ? void 0 : _book$volumeInfo$imag.thumbnail) || \"\"\n        };\n      });\n      setSearchedBooks(bookData);\n      setSearchInput(\"\");\n    } catch (err) {\n      console.error(err);\n    }\n  }; // create function to handle saving a book to our database\n\n\n  const handleSaveBook = async bookId => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find(book => book.bookId === bookId);\n    console.log(bookto); // get token\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const {\n        data\n      } = await saveBook({\n        variables: {\n          bookData: { ...bookToSave\n          }\n        }\n      }); // if book successfully saves to user's account, save book id to state\n\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 6\n    }\n  }, \"Search for Books!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a book\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, searchedBooks.length ? `Viewing ${searchedBooks.length} results:` : \"Search for a book to begin\"), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, searchedBooks.map(book => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: book.bookId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 8\n      }\n    }, book.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: book.image,\n      alt: `The cover for ${book.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 10\n      }\n    }, book.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 10\n      }\n    }, \"Authors: \", book.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 10\n      }\n    }, book.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedId => savedId === book.bookId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveBook(book.bookId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, (savedBookIds === null || savedBookIds === void 0 ? void 0 : savedBookIds.some(savedId => savedId === book.bookId)) ? \"This book has already been saved!\" : \"Save this Book!\")));\n  }))));\n};\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/Christina/Desktop/projects/book-search-engine/client/src/pages/SearchBooks.js"],"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBookIds","getSavedBookIds","useMutation","SAVE_BOOK","SearchBooks","searchedBooks","setSearchedBooks","searchInput","setSearchInput","savedBookIds","setSavedBookIds","saveBook","error","handleFormSubmit","event","preventDefault","response","fetch","ok","Error","items","json","bookData","map","book","bookId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","handleSaveBook","bookToSave","find","log","bookto","token","loggedIn","getToken","data","variables","e","target","value","length","some","savedId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tJumbotron,\n\tContainer,\n\tCol,\n\tForm,\n\tButton,\n\tCard,\n\tCardColumns,\n} from \"react-bootstrap\";\nimport Auth from \"../utils/auth\";\nimport { saveBookIds, getSavedBookIds } from \"../utils/localStorage\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { SAVE_BOOK } from \"../utils/mutations\";\n\nconst SearchBooks = () => {\n\t// create state for holding returned google api data\n\tconst [searchedBooks, setSearchedBooks] = useState([]);\n\t// create state for holding our search field data\n\tconst [searchInput, setSearchInput] = useState(\"\");\n\t// create state to hold saved bookId values\n\tconst [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n\tconst [saveBook, { error }] = useMutation(SAVE_BOOK);\n\n\t// set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n\t// learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\tuseEffect(() => {\n\t\treturn () => saveBookIds(savedBookIds);\n\t});\n\n\t// create method to search for books and set state on form submit\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (!searchInput) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await fetch(\n\t\t\t\t`https://www.googleapis.com/books/v1/volumes?q=${searchInput}`\n\t\t\t);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\"something went wrong!\");\n\t\t\t}\n\n\t\t\tconst { items } = await response.json();\n\n\t\t\tconst bookData = items.map((book) => ({\n\t\t\t\tbookId: book.id,\n\t\t\t\tauthors: book.volumeInfo.authors || [\"No author to display\"],\n\t\t\t\ttitle: book.volumeInfo.title,\n\t\t\t\tdescription: book.volumeInfo.description,\n\t\t\t\timage: book.volumeInfo.imageLinks?.thumbnail || \"\",\n\t\t\t}));\n\n\t\t\tsetSearchedBooks(bookData);\n\t\t\tsetSearchInput(\"\");\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\t// create function to handle saving a book to our database\n\tconst handleSaveBook = async (bookId) => {\n\t\t// find the book in `searchedBooks` state by the matching id\n\t\tconst bookToSave = searchedBooks.find((book) => book.bookId === bookId);\nconsole.log(bookto)\n\t\t// get token\n\t\tconst token = Auth.loggedIn() ? Auth.getToken() : null;\n\n\t\tif (!token) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\tconst { data } = await saveBook({\n\t\t\t\tvariables: { bookData: { ...bookToSave } },\n\t\t\t});\n\n\t\t\t// if book successfully saves to user's account, save book id to state\n\t\t\tsetSavedBookIds([...savedBookIds, bookToSave.bookId]);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Jumbotron fluid className=\"text-light bg-dark\">\n\t\t\t\t<Container>\n\t\t\t\t\t<h1>Search for Books!</h1>\n\t\t\t\t\t<Form onSubmit={handleFormSubmit}>\n\t\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t\t<Col xs={12} md={8}>\n\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\tname=\"searchInput\"\n\t\t\t\t\t\t\t\t\tvalue={searchInput}\n\t\t\t\t\t\t\t\t\tonChange={(e) => setSearchInput(e.target.value)}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Search for a book\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs={12} md={4}>\n\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"success\" size=\"lg\">\n\t\t\t\t\t\t\t\t\tSubmit Search\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Form.Row>\n\t\t\t\t\t</Form>\n\t\t\t\t</Container>\n\t\t\t</Jumbotron>\n\n\t\t\t<Container>\n\t\t\t\t<h2>\n\t\t\t\t\t{searchedBooks.length\n\t\t\t\t\t\t? `Viewing ${searchedBooks.length} results:`\n\t\t\t\t\t\t: \"Search for a book to begin\"}\n\t\t\t\t</h2>\n\t\t\t\t<CardColumns>\n\t\t\t\t\t{searchedBooks.map((book) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Card key={book.bookId} border=\"dark\">\n\t\t\t\t\t\t\t\t{book.image ? (\n\t\t\t\t\t\t\t\t\t<Card.Img\n\t\t\t\t\t\t\t\t\t\tsrc={book.image}\n\t\t\t\t\t\t\t\t\t\talt={`The cover for ${book.title}`}\n\t\t\t\t\t\t\t\t\t\tvariant=\"top\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Card.Title>{book.title}</Card.Title>\n\t\t\t\t\t\t\t\t\t<p className=\"small\">Authors: {book.authors}</p>\n\t\t\t\t\t\t\t\t\t<Card.Text>{book.description}</Card.Text>\n\t\t\t\t\t\t\t\t\t{Auth.loggedIn() && (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={savedBookIds?.some(\n\t\t\t\t\t\t\t\t\t\t\t\t(savedId) => savedId === book.bookId\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-block btn-info\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleSaveBook(book.bookId)}>\n\t\t\t\t\t\t\t\t\t\t\t{savedBookIds?.some((savedId) => savedId === book.bookId)\n\t\t\t\t\t\t\t\t\t\t\t\t? \"This book has already been saved!\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"Save this Book!\"}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</CardColumns>\n\t\t\t</Container>\n\t\t</>\n\t);\n};\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}