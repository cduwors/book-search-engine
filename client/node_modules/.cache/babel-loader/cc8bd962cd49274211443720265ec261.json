{"ast":null,"code":"var _jsxFileName = \"/Users/Christina/Desktop/projects/book-search-engine/client/src/components/SignupForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  }); // set state for form validation\n\n  const [validated] = useState(false); // set state for alert\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [addUser, {\n    error\n  }] = useMutation(ADD_USER);\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserFormData({ ...userFormData,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault(); // check if form has everything (as per react-bootstrap docs)\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      await addUser({\n        variables: { ...userFormData\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"something went wrong!\");\n      }\n\n      const {\n        token,\n        user\n      } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: \"\",\n      email: \"\",\n      password: \"\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    dismissible: true,\n    onClose: () => setShowAlert(false),\n    show: showAlert,\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, \"Something went wrong with your signup!\"), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Your username\",\n    name: \"username\",\n    onChange: handleInputChange,\n    value: userFormData.username,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 6\n    }\n  }, \"Username is required!\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 6\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Your email address\",\n    name: \"email\",\n    onChange: handleInputChange,\n    value: userFormData.email,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, \"Email is required!\")), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 6\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Your password\",\n    name: \"password\",\n    onChange: handleInputChange,\n    value: userFormData.password,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 6\n    }\n  }, \"Password is required!\")), /*#__PURE__*/React.createElement(Button, {\n    disabled: !(userFormData.username && userFormData.email && userFormData.password),\n    type: \"submit\",\n    variant: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, \"Submit\")));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/Christina/Desktop/projects/book-search-engine/client/src/components/SignupForm.js"],"names":["React","useEffect","useState","Form","Button","Alert","useMutation","ADD_USER","Auth","SignupForm","userFormData","setUserFormData","username","email","password","validated","showAlert","setShowAlert","addUser","error","handleInputChange","event","name","value","target","handleFormSubmit","preventDefault","form","currentTarget","checkValidity","stopPropagation","variables","response","ok","Error","token","user","json","console","log","login","err"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nimport Auth from \"../utils/auth\";\n\nconst SignupForm = () => {\n\t// set initial form state\n\tconst [userFormData, setUserFormData] = useState({\n\t\tusername: \"\",\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t});\n\t// set state for form validation\n\tconst [validated] = useState(false);\n\t// set state for alert\n\tconst [showAlert, setShowAlert] = useState(false);\n\n\tconst [addUser, { error}] = useMutation(ADD_USER);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n\tconst handleInputChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetUserFormData({ ...userFormData, [name]: value });\n\t};\n\n\tconst handleFormSubmit = async (event) => {\n\t\tevent.preventDefault();\n\n\t\t// check if form has everything (as per react-bootstrap docs)\n\t\tconst form = event.currentTarget;\n\t\tif (form.checkValidity() === false) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t}\n\n\t\ttry {\n\t\t\tawait addUser({variables: { ...userFormData }});\n\n\t\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(\"something went wrong!\");\n\t\t\t}\n\n\t\t\tconst { token, user } = await response.json();\n\t\t\tconsole.log(user);\n\t\t\tAuth.login(token);\n\t\t} catch (err) {\n\t\t\tconsole.error(err);\n\t\t\tsetShowAlert(true);\n\t\t}\n\n\t\tsetUserFormData({\n\t\t\tusername: \"\",\n\t\t\temail: \"\",\n\t\t\tpassword: \"\",\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{/* This is needed for the validation functionality above */}\n\t\t\t<Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n\t\t\t\t{/* show alert if server response is bad */}\n\t\t\t\t<Alert\n\t\t\t\t\tdismissible\n\t\t\t\t\tonClose={() => setShowAlert(false)}\n\t\t\t\t\tshow={showAlert}\n\t\t\t\t\tvariant=\"danger\">\n\t\t\t\t\tSomething went wrong with your signup!\n\t\t\t\t</Alert>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"username\">Username</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tplaceholder=\"Your username\"\n\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tvalue={userFormData.username}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\tUsername is required!\n\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"email\">Email</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tplaceholder=\"Your email address\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tvalue={userFormData.email}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\tEmail is required!\n\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Label htmlFor=\"password\">Password</Form.Label>\n\t\t\t\t\t<Form.Control\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tplaceholder=\"Your password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tvalue={userFormData.password}\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\n\t\t\t\t\t\tPassword is required!\n\t\t\t\t\t</Form.Control.Feedback>\n\t\t\t\t</Form.Group>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\t!(\n\t\t\t\t\t\t\tuserFormData.username &&\n\t\t\t\t\t\t\tuserFormData.email &&\n\t\t\t\t\t\t\tuserFormData.password\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvariant=\"success\">\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Form>\n\t\t</>\n\t);\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}